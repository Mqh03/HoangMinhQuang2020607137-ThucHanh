import numpy as np

def sample(x, fs):
    # Tính toán tín hiệu lấy mẫu từ tín hiệu liên tục x với tần số lấy mẫu fs.

    # Args:
    # x: Tín hiệu liên tục.
    # fs: Tần số lấy mẫu.

    # Returns:
    #  Tín hiệu lấy mẫu.

    n = len(x)
    t = np.arange(0, n / fs, 1 / fs)
    y = np.interp(t, x[:n], x)
    return y

    def quantize(x, n_bits):
        # Tính toán tín hiệu lượng tử hóa từ tín hiệu lấy mẫu x với độ phân giải n_bits.
        # Args:
        # x: Tín hiệu lấy mẫu.
        # n_bits: Độ phân giải lượng tử hóa.
        # Returns:
        # Tín hiệu lượng tử hóa.
        y = np.floor((x + 1.0 / 2) * 2 ** (n_bits - 1)) / 2 ** (n_bits - 1)

    return y

    def filter(x, h):
        # Tính toán tín hiệu đầu ra của bộ lọc x với đáp ứng tần số h.

        # Args:
        # x: Tín hiệu đầu vào.
        # h: Đáp ứng tần số của bộ lọc.

        # Returns:
        # Tín hiệu đầu ra của bộ lọc.

        n = len(x)
        y = np.convolve(x, h, mode='same')

    return y

    def fft(x):
        # Tính toán biến đổi Fourier của tín hiệu x.

        # Args:
        # x: Tín hiệu đầu vào.

        # Returns:
        # Mảng biến đổi Fourier của tín hiệu x.

        n = len(x)
        y = np.fft.fft(x)

    return y
